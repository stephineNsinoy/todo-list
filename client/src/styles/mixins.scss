@import './variables';

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
  
@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin breakpoint($class) {
  @if $class==xs {
    @media (max-width: 575px) {
      @content;
    }
  } @else if $class==sm {
    @media (max-width: 767px) {
      @content;
    }
  } @else if $class==md {
    @media (max-width: 991px) {
      @content;
    }
  } @else if $class==lg {
    @media (max-width: 1200px) {
      @content;
    }
  } @else if $class==xl {
    @media (max-width: 1400px) {
      @content;
    }
  } @else {
    @warn 'Breakpoint mixin supports: xs, sm, md, lg, xl';
  }
}

// Animations
@mixin ease($duration: 0.5s) {
  transition: $duration ease;
}
  
@mixin linear($duration: 0.5s) {
  transition: $duration linear;
}

@keyframes dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 200;
    stroke-dashoffset: -35px;
  }
  100% {
    stroke-dashoffset: -125px;
  }
}

// Text Styles  
@mixin heading($size, $height) {
  font-family: Montserrat, sans-serif;
  font-size: $size;
  line-height: $height;
  font-weight: 700;
  font-style: normal;
  margin: 0;
}

@mixin body($size, $height) {
  font-family: Inter, sans-serif;
  font-size: $size;
  line-height: $height;
  font-weight: 400;
  font-style: normal;
  margin: 0;
}
  
@mixin strong($size, $height) {
  font-family: Inter, sans-serif;
  font-size: $size;
  line-height: $height;
  font-weight: 500;
  font-style: normal;
  margin: 0;
}

@mixin data($size, $height) {
  font-family: Inter, sans-serif;
  font-size: $size;
  line-height: $height;
  font-weight: 700;
  font-style: normal;
  margin: 0;
}

@mixin textArea {
  width: 100%;
  outline: none;
  border: 1px solid $brown-500;
  overflow: auto;
  height: 114px;
  min-height: 50px;
  max-height: 240px;

  @content;
}

// Buttons
.buttonBase {
  @include ease(0.3s);
  //@include heading(0.75rem, 1.67);
  cursor: pointer;
  text-transform: capitalize;
  outline: none;
  text-decoration: none;
  text-align: center;
}

@mixin primary($bg, $bg-hover, $bg-pressed, $color, $box-shadow) {
  @extend .buttonBase;
  color: $color;
  background-color: $bg;
  border-radius: 100px;
  padding: 10px 24px;
  border: none;
  box-shadow: $box-shadow;

  &:hover:not(:disabled) {
    background-color: $bg-hover;
  }

  &:focus:not(:disabled),
  &:active:not(:disabled) {
    background-color: $bg-pressed;
  }

  &:disabled {
    opacity: 0.5;
    cursor: default;
  }
}
  
@mixin secondary($color) {
  @extend .buttonBase;
  color: $color;
  background-color: transparent;
  border-radius: 100px;
  padding: 10px 24px;
  border: 1px solid $color;

  &:hover:not(:disabled) {
    background-color: transparentize($color, 0.9);
  }

  &:focus:not(:disabled),
  &:active:not(:disabled) {
    background-color: transparentize($color, 0.75);
  }

  &:disabled {
    opacity: 0.5;
    cursor: default;
  }
}
  
@mixin textButton($color) {
  @extend .buttonBase;
  color: $color;
  background: none;
  padding: 0;
  border: none;

  &:hover:not(:disabled) {
    color: darken($color, 5%);
  }

  &:focus:not(:disabled),
  &:active:not(:disabled) {
    color: darken($color, 15%);
  }

  &:disabled {
    color: $brown-100;
    opacity: 0.5;
    cursor: default;
  }
}